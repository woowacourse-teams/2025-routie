buildscript {
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:11.11.1'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '7.1.0'
    id 'checkstyle'
    id 'org.flywaydb.flyway' version '11.11.1'
}

group = 'routie'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Logback encoder
    implementation 'net.logstash.logback:logstash-logback-encoder:8.1'

    // LoggingEventCompositeJsonEncoder uuid
    implementation 'com.fasterxml.uuid:java-uuid-generator:5.1.0'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // RestAssured
    testImplementation 'io.rest-assured:rest-assured'

    // h2
    testRuntimeOnly 'com.h2database:h2'

    // springdoc(Swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'

    // full sql query logging
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'

    // Flyway
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
}

tasks.named('test') {
    systemProperty 'spring.profiles.active', 'test'
    useJUnitPlatform()
}

spotless {
    java {
        eclipse().configFile("config/formatter/eclipse-java-routie-style.xml")
        importOrder()
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
}

checkstyle {
    toolVersion = "10.26.1"
    configFile = file("config/checkstyle/checkstyle.xml")
}

flyway {
    url = System.getenv('MYSQL_URL')
    user = System.getenv('MYSQL_USERNAME')
    password = System.getenv('MYSQL_PASSWORD')
    locations = ["filesystem:src/main/resources/db/migration"]
}
