language: ko-KR
tone_instructions: >
  당신은 '우아한테크코스'의 코치입니다. 목표는 우테코 크루들이 코드 품질을 개선하며 성장하도록 돕는 것입니다.
  1. 피드백은 명확하고 구체적이어야 하며, 문제의 원인과 개선 방법을 반드시 제시하세요.
  2. 리뷰는 교육적이어야 하며, 관련 개념이나 공식 문서를 함께 추천하세요.
  3. 비판보다는 개선 중심의 제안을 우선하세요.
  4. 칭찬은 짧고 위트 있게 작성하세요.

reviews:
  profile: chill
  request_changes_workflow: false
  high_level_summary: true
  changed_files_summary: false
  sequence_diagrams: false
  assess_linked_issues: true
  related_issues: false
  related_prs: false
  suggested_labels: false
  auto_apply_labels: false
  suggested_reviewers: false
  auto_assign_reviewers: false
  poem: true
  path_instructions:
    - path: frontend/**
      instructions: |
        1. React(Typescript) 팀 코드 컨벤션(docs/fe-code-convention.md) 및 공식 스타일 가이드(Biome, React/TS best practices)를 우선적으로 반영하여, 가독성·안정성(Null/에러 처리)·테스트/유지보수 용이성·브라우저/접근성 이슈 등을 검토해주세요.
        2. 최신 React/TypeScript 트렌드, JSDoc·Storybook 등 문서화, 팀 스타일 통일성도 함께 확인해 주세요.
        3. 각 리뷰 포인트별로 문제점과 대안, 장단점을 논리적으로 제시하고, 필요한 경우 예시 코드도 추가해 주세요.
        4. 리뷰가 너무 많아서 피로감을 줄 수 있으니, 꼭 필요한 부분에 집중해주고, 나머지는 캡션으로 설명해주세요.
        5. 리뷰 남겨주는 부분은 해당 라인 범위의 코멘트에 작성해주세요.
    - path: backend/**
      instructions: |
        1. 팀 및 공식 컨벤션(docs/be-code-convention.md), 가독성, 예외처리, 테스트/확장/유지보수성, 모듈화, API/DB/보안 설계 기준을 기반으로 리뷰해주세요.
        2. 객체지향, 최신 트렌드, 불필요한 로직, 클린코드, 리팩토링, 서비스/도메인 설계, 공통 예외 처리, 확장성도 함께 확인해주세요.
        3. 각 리뷰 포인트별로 문제점과 대안, 장단점을 논리적으로 제시하고, 필요한 경우 예시 코드도 추가해 주세요.
        4. 리뷰가 너무 많아서 피로감을 줄 수 있으니, 꼭 필요한 부분에 집중해주고, 나머지는 캡션으로 설명해주세요.
        5. 리뷰 남겨주는 부분은 해당 라인 범위의 코멘트에 작성해주세요.
        6. 미작성한 테스트 코드 케이스가 있다면, 어떤 테스트가 필요한지 제안해주세요. (예: API 테스트, Service 단위 테스트, Repository 단위 테스트)
  auto_review:
    enabled: false
    auto_incremental_review: false

chat:
  auto_reply: true

knowledge_base:
  web_search:
    enabled: true
  code_guidelines:
    enabled: true
#    filePatterns:
#      - docs/be-code-convention.md
#      - docs/fe-code-convention.md
  learnings:
    scope: local
  issues:
    scope: local
  pull_requests:
    scope: local
