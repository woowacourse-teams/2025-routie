name: CD on develop branch

on:
  push:
    branches: [ "develop" ]
    paths:
      - 'backend/**'

jobs:
  deploy-to-ec2:
    name: Deploy to EC2
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: [ self-hosted ]

    defaults:
      run:
        working-directory: backend/spring-routie

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean bootJar

      - name: Test with Gradle
        run: ./gradlew test
        env:
          SPRING_PROFILES_ACTIVE: test

      - name: Restore application.yml
        run: |
          mkdir -p config
          echo "${{ secrets.APPLICATION_YML_PROD }}" > config/application.yml

      - name: Kill existing Spring Process
        run: |
          PID=$(lsof -ti:80 || true)
          if [ -n "$PID" ]; then
            echo "Killing process on port 80: $PID"
            kill -9 "$PID"
          else
            echo "No process found on port 80"
          fi

      - name: Start Spring Boot Application with external config
        run: |
          JAR_NAME=$(ls build/libs/*.jar | head -n 1)
          sudo nohup java -jar "$JAR_NAME" --server.port=80 --spring.config.location=./config/application.yml > app.log 2>&1 &
          echo "Started $JAR_NAME with external config"
